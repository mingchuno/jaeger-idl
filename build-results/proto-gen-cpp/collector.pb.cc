// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collector.proto

#include "collector.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_model_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Batch_model_2eproto;
namespace jaeger {
namespace api_v2 {
class PostSpansRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostSpansRequest> _instance;
} _PostSpansRequest_default_instance_;
class PostSpansResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostSpansResponse> _instance;
} _PostSpansResponse_default_instance_;
}  // namespace api_v2
}  // namespace jaeger
static void InitDefaultsscc_info_PostSpansRequest_collector_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jaeger::api_v2::_PostSpansRequest_default_instance_;
    new (ptr) ::jaeger::api_v2::PostSpansRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PostSpansRequest_collector_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PostSpansRequest_collector_2eproto}, {
      &scc_info_Batch_model_2eproto.base,}};

static void InitDefaultsscc_info_PostSpansResponse_collector_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::jaeger::api_v2::_PostSpansResponse_default_instance_;
    new (ptr) ::jaeger::api_v2::PostSpansResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PostSpansResponse_collector_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PostSpansResponse_collector_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_collector_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_collector_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_collector_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_collector_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jaeger::api_v2::PostSpansRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::jaeger::api_v2::PostSpansRequest, batch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::jaeger::api_v2::PostSpansResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::jaeger::api_v2::PostSpansRequest)},
  { 6, -1, sizeof(::jaeger::api_v2::PostSpansResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jaeger::api_v2::_PostSpansRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::jaeger::api_v2::_PostSpansResponse_default_instance_),
};

const char descriptor_table_protodef_collector_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017collector.proto\022\rjaeger.api_v2\032\013model."
  "proto\032\024gogoproto/gogo.proto\032\034google/api/"
  "annotations.proto\"=\n\020PostSpansRequest\022)\n"
  "\005batch\030\001 \001(\0132\024.jaeger.api_v2.BatchB\004\310\336\037\000"
  "\"\023\n\021PostSpansResponse2|\n\020CollectorServic"
  "e\022h\n\tPostSpans\022\037.jaeger.api_v2.PostSpans"
  "Request\032 .jaeger.api_v2.PostSpansRespons"
  "e\"\030\202\323\344\223\002\022\"\r/api/v2/spans:\001*B-\n\027io.jaeger"
  "tracing.api_v2Z\006api_v2\310\342\036\001\320\342\036\001\340\342\036\001b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_collector_2eproto_deps[3] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_model_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_collector_2eproto_sccs[2] = {
  &scc_info_PostSpansRequest_collector_2eproto.base,
  &scc_info_PostSpansResponse_collector_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_collector_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_collector_2eproto = {
  false, false, descriptor_table_protodef_collector_2eproto, "collector.proto", 362,
  &descriptor_table_collector_2eproto_once, descriptor_table_collector_2eproto_sccs, descriptor_table_collector_2eproto_deps, 2, 3,
  schemas, file_default_instances, TableStruct_collector_2eproto::offsets,
  file_level_metadata_collector_2eproto, 2, file_level_enum_descriptors_collector_2eproto, file_level_service_descriptors_collector_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_collector_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_collector_2eproto)), true);
namespace jaeger {
namespace api_v2 {

// ===================================================================

class PostSpansRequest::_Internal {
 public:
  static const ::jaeger::api_v2::Batch& batch(const PostSpansRequest* msg);
};

const ::jaeger::api_v2::Batch&
PostSpansRequest::_Internal::batch(const PostSpansRequest* msg) {
  return *msg->batch_;
}
void PostSpansRequest::clear_batch() {
  if (GetArena() == nullptr && batch_ != nullptr) {
    delete batch_;
  }
  batch_ = nullptr;
}
PostSpansRequest::PostSpansRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jaeger.api_v2.PostSpansRequest)
}
PostSpansRequest::PostSpansRequest(const PostSpansRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_batch()) {
    batch_ = new ::jaeger::api_v2::Batch(*from.batch_);
  } else {
    batch_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:jaeger.api_v2.PostSpansRequest)
}

void PostSpansRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PostSpansRequest_collector_2eproto.base);
  batch_ = nullptr;
}

PostSpansRequest::~PostSpansRequest() {
  // @@protoc_insertion_point(destructor:jaeger.api_v2.PostSpansRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostSpansRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete batch_;
}

void PostSpansRequest::ArenaDtor(void* object) {
  PostSpansRequest* _this = reinterpret_cast< PostSpansRequest* >(object);
  (void)_this;
}
void PostSpansRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostSpansRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostSpansRequest& PostSpansRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostSpansRequest_collector_2eproto.base);
  return *internal_default_instance();
}


void PostSpansRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:jaeger.api_v2.PostSpansRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && batch_ != nullptr) {
    delete batch_;
  }
  batch_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostSpansRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .jaeger.api_v2.Batch batch = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_batch(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostSpansRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jaeger.api_v2.PostSpansRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .jaeger.api_v2.Batch batch = 1 [(.gogoproto.nullable) = false];
  if (this->has_batch()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::batch(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jaeger.api_v2.PostSpansRequest)
  return target;
}

size_t PostSpansRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jaeger.api_v2.PostSpansRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .jaeger.api_v2.Batch batch = 1 [(.gogoproto.nullable) = false];
  if (this->has_batch()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *batch_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostSpansRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jaeger.api_v2.PostSpansRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PostSpansRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostSpansRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jaeger.api_v2.PostSpansRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jaeger.api_v2.PostSpansRequest)
    MergeFrom(*source);
  }
}

void PostSpansRequest::MergeFrom(const PostSpansRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jaeger.api_v2.PostSpansRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_batch()) {
    _internal_mutable_batch()->::jaeger::api_v2::Batch::MergeFrom(from._internal_batch());
  }
}

void PostSpansRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jaeger.api_v2.PostSpansRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostSpansRequest::CopyFrom(const PostSpansRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jaeger.api_v2.PostSpansRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostSpansRequest::IsInitialized() const {
  return true;
}

void PostSpansRequest::InternalSwap(PostSpansRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(batch_, other->batch_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostSpansRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PostSpansResponse::_Internal {
 public:
};

PostSpansResponse::PostSpansResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:jaeger.api_v2.PostSpansResponse)
}
PostSpansResponse::PostSpansResponse(const PostSpansResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:jaeger.api_v2.PostSpansResponse)
}

void PostSpansResponse::SharedCtor() {
}

PostSpansResponse::~PostSpansResponse() {
  // @@protoc_insertion_point(destructor:jaeger.api_v2.PostSpansResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostSpansResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PostSpansResponse::ArenaDtor(void* object) {
  PostSpansResponse* _this = reinterpret_cast< PostSpansResponse* >(object);
  (void)_this;
}
void PostSpansResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostSpansResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostSpansResponse& PostSpansResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostSpansResponse_collector_2eproto.base);
  return *internal_default_instance();
}


void PostSpansResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:jaeger.api_v2.PostSpansResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostSpansResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostSpansResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:jaeger.api_v2.PostSpansResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jaeger.api_v2.PostSpansResponse)
  return target;
}

size_t PostSpansResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jaeger.api_v2.PostSpansResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostSpansResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jaeger.api_v2.PostSpansResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PostSpansResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostSpansResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jaeger.api_v2.PostSpansResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jaeger.api_v2.PostSpansResponse)
    MergeFrom(*source);
  }
}

void PostSpansResponse::MergeFrom(const PostSpansResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jaeger.api_v2.PostSpansResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PostSpansResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jaeger.api_v2.PostSpansResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostSpansResponse::CopyFrom(const PostSpansResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jaeger.api_v2.PostSpansResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostSpansResponse::IsInitialized() const {
  return true;
}

void PostSpansResponse::InternalSwap(PostSpansResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostSpansResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api_v2
}  // namespace jaeger
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::jaeger::api_v2::PostSpansRequest* Arena::CreateMaybeMessage< ::jaeger::api_v2::PostSpansRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jaeger::api_v2::PostSpansRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::jaeger::api_v2::PostSpansResponse* Arena::CreateMaybeMessage< ::jaeger::api_v2::PostSpansResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::jaeger::api_v2::PostSpansResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
