// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zipkin.proto

package zipkin2.proto3;

public interface EndpointOrBuilder extends
    // @@protoc_insertion_point(interface_extends:zipkin.proto3.Endpoint)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Lower-case label of this node in the service graph, such as "favstar".
   * Leave absent if unknown.
   * This is a primary label for trace lookup and aggregation, so it should be
   * intuitive and consistent. Many use a name from service discovery.
   * </pre>
   *
   * <code>string service_name = 1;</code>
   * @return The serviceName.
   */
  java.lang.String getServiceName();
  /**
   * <pre>
   * Lower-case label of this node in the service graph, such as "favstar".
   * Leave absent if unknown.
   * This is a primary label for trace lookup and aggregation, so it should be
   * intuitive and consistent. Many use a name from service discovery.
   * </pre>
   *
   * <code>string service_name = 1;</code>
   * @return The bytes for serviceName.
   */
  com.google.protobuf.ByteString
      getServiceNameBytes();

  /**
   * <pre>
   * 4 byte representation of the primary IPv4 address associated with this
   * connection. Absent if unknown.
   * </pre>
   *
   * <code>bytes ipv4 = 2;</code>
   * @return The ipv4.
   */
  com.google.protobuf.ByteString getIpv4();

  /**
   * <pre>
   * 16 byte representation of the primary IPv6 address associated with this
   * connection. Absent if unknown.
   * Prefer using the ipv4 field for mapped addresses.
   * </pre>
   *
   * <code>bytes ipv6 = 3;</code>
   * @return The ipv6.
   */
  com.google.protobuf.ByteString getIpv6();

  /**
   * <pre>
   * Depending on context, this could be a listen port or the client-side of a
   * socket. Absent if unknown.
   * </pre>
   *
   * <code>int32 port = 4;</code>
   * @return The port.
   */
  int getPort();
}
